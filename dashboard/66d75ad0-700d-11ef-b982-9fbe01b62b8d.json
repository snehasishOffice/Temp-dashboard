{
  "entityType" : "DASHBOARD",
  "entity" : {
    "assignedCustomers" : null,
    "configuration" : {
      "description" : "",
      "widgets" : {
        "b34ca958-fe04-d689-9195-b9ba6799e502" : {
          "typeFullFqn" : "system.time_series_chart",
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "device",
              "name" : "",
              "deviceId" : "ea58da90-6fff-11ef-bed4-9fee1d204d5c",
              "dataKeys" : [ {
                "name" : "temperature",
                "type" : "timeseries",
                "label" : "Temperature",
                "color" : "#2196f3",
                "settings" : {
                  "yAxisId" : "default",
                  "showInLegend" : true,
                  "dataHiddenByDefault" : false,
                  "type" : "line",
                  "lineSettings" : {
                    "showLine" : true,
                    "step" : false,
                    "stepType" : "start",
                    "smooth" : false,
                    "lineType" : "solid",
                    "lineWidth" : 2,
                    "showPoints" : false,
                    "showPointLabel" : false,
                    "pointLabelPosition" : "top",
                    "pointLabelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "pointLabelColor" : "rgba(0, 0, 0, 0.76)",
                    "enablePointLabelBackground" : false,
                    "pointLabelBackground" : "rgba(255,255,255,0.56)",
                    "pointShape" : "emptyCircle",
                    "pointSize" : 4,
                    "fillAreaSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "barSettings" : {
                    "showBorder" : false,
                    "borderWidth" : 2,
                    "borderRadius" : 0,
                    "showLabel" : false,
                    "labelPosition" : "top",
                    "labelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "labelColor" : "rgba(0, 0, 0, 0.76)",
                    "enableLabelBackground" : false,
                    "labelBackground" : "rgba(255,255,255,0.56)",
                    "backgroundSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "comparisonSettings" : {
                    "showValuesForComparison" : false,
                    "comparisonValuesLabel" : "",
                    "color" : ""
                  }
                },
                "_hash" : 0.14692938762677388,
                "units" : "Â°C",
                "decimals" : 0
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              },
              "latestDataKeys" : [ ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              },
              "timezone" : null
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "top",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              },
              "thresholds" : [ ],
              "dataZoom" : true,
              "stack" : false,
              "yAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "left",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "showTicks" : true,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : true,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : true,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "xAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "bottom",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 10,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "ticksFormat" : { },
                "showTicks" : true,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : true,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : true,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "legendLabelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "legendLabelColor" : "rgba(0, 0, 0, 0.76)",
              "showTooltip" : true,
              "tooltipTrigger" : "axis",
              "tooltipValueFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "16px"
              },
              "tooltipValueColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipShowDate" : true,
              "tooltipDateFormat" : {
                "format" : null,
                "lastUpdateAgo" : false,
                "custom" : false,
                "auto" : true,
                "autoDateFormatSettings" : { }
              },
              "tooltipDateFont" : {
                "family" : "Roboto",
                "size" : 11,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "tooltipDateColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipDateInterval" : true,
              "tooltipBackgroundColor" : "rgba(255, 255, 255, 0.76)",
              "tooltipBackgroundBlur" : 4,
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "yAxes" : {
                "default" : {
                  "units" : null,
                  "decimals" : 0,
                  "show" : true,
                  "label" : "",
                  "labelFont" : {
                    "family" : "Roboto",
                    "size" : 12,
                    "sizeUnit" : "px",
                    "style" : "normal",
                    "weight" : "600",
                    "lineHeight" : "1"
                  },
                  "labelColor" : "rgba(0, 0, 0, 0.54)",
                  "position" : "left",
                  "showTickLabels" : true,
                  "tickLabelFont" : {
                    "family" : "Roboto",
                    "size" : 12,
                    "sizeUnit" : "px",
                    "style" : "normal",
                    "weight" : "400",
                    "lineHeight" : "1"
                  },
                  "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                  "ticksFormatter" : null,
                  "showTicks" : true,
                  "ticksColor" : "rgba(0, 0, 0, 0.54)",
                  "showLine" : true,
                  "lineColor" : "rgba(0, 0, 0, 0.54)",
                  "showSplitLines" : true,
                  "splitLinesColor" : "rgba(0, 0, 0, 0.12)",
                  "id" : "default",
                  "order" : 0
                }
              },
              "noAggregationBarWidthSettings" : {
                "strategy" : "group",
                "groupWidth" : {
                  "relative" : true,
                  "relativeWidth" : 2,
                  "absoluteWidth" : 1000
                },
                "barWidth" : {
                  "relative" : true,
                  "relativeWidth" : 2,
                  "absoluteWidth" : 1000
                }
              },
              "animation" : {
                "animation" : true,
                "animationThreshold" : 2000,
                "animationDuration" : 500,
                "animationEasing" : "cubicOut",
                "animationDelay" : 0,
                "animationDurationUpdate" : 300,
                "animationEasingUpdate" : "cubicOut",
                "animationDelayUpdate" : 0
              },
              "padding" : "12px",
              "comparisonEnabled" : false,
              "timeForComparison" : "previousInterval",
              "comparisonCustomIntervalValue" : 7200000,
              "comparisonXAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "top",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 10,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "ticksFormat" : { },
                "showTicks" : true,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : true,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : true,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "grid" : {
                "show" : false,
                "backgroundColor" : null,
                "borderWidth" : 1,
                "borderColor" : "#ccc"
              },
              "legendColumnTitleFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "legendColumnTitleColor" : "rgba(0, 0, 0, 0.38)",
              "legendValueFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "16px"
              },
              "legendValueColor" : "rgba(0, 0, 0, 0.87)",
              "tooltipLabelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "tooltipLabelColor" : "rgba(0, 0, 0, 0.76)"
            },
            "title" : "Time series chart",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : null,
            "configMode" : "basic",
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "thermostat",
            "iconColor" : "#1F6BDD",
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "titleFont" : {
              "size" : 16,
              "sizeUnit" : "px",
              "family" : "Roboto",
              "weight" : "500",
              "style" : "normal",
              "lineHeight" : "24px"
            },
            "titleColor" : "rgba(0, 0, 0, 0.87)",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "units" : "",
            "decimals" : null,
            "noDataDisplayMessage" : "",
            "timewindowStyle" : {
              "showIcon" : false,
              "iconSize" : "24px",
              "icon" : null,
              "iconPosition" : "left",
              "font" : {
                "size" : 12,
                "sizeUnit" : "px",
                "family" : "Roboto",
                "weight" : "400",
                "style" : "normal",
                "lineHeight" : "16px"
              },
              "color" : "rgba(0, 0, 0, 0.38)",
              "displayTypePrefix" : true
            },
            "margin" : "0px",
            "borderRadius" : "0px",
            "iconSize" : "0px",
            "enableDataExport" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "b34ca958-fe04-d689-9195-b9ba6799e502"
        },
        "68f04119-04ef-ca04-5cc8-83c8d616393c" : {
          "typeFullFqn" : "system.analogue_gauges.temperature_radial_gauge_canvas_gauges",
          "type" : "latest",
          "sizeX" : 6,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "device",
              "name" : "",
              "deviceId" : "ea58da90-6fff-11ef-bed4-9fee1d204d5c",
              "dataKeys" : [ {
                "name" : "temperature",
                "type" : "timeseries",
                "label" : "Temperature",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8783109724792904
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1725958883662,
                  "endTimeMs" : 1726045283662
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "startAngle" : 67.5,
              "ticksAngle" : 225,
              "needleCircleSize" : 7,
              "defaultColor" : "#e65100",
              "minValue" : -60,
              "maxValue" : 60,
              "majorTicksCount" : 12,
              "colorMajorTicks" : "#444",
              "minorTicks" : 12,
              "colorMinorTicks" : "#666",
              "numbersFont" : {
                "family" : "Roboto",
                "size" : 20,
                "style" : "normal",
                "weight" : "normal",
                "color" : "#263238"
              },
              "numbersColor" : "#263238",
              "showUnitTitle" : true,
              "unitTitle" : "Temperature",
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "normal",
                "color" : "#263238"
              },
              "titleColor" : "#263238",
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "unitsColor" : "#616161",
              "valueBox" : true,
              "valueInt" : 3,
              "valueFont" : {
                "family" : "Segment7Standard",
                "size" : 30,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444"
              },
              "valueColor" : "#444",
              "valueColorShadow" : "rgba(0, 0, 0, 0.49)",
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "showBorder" : true,
              "colorPlate" : "#cfd8dc",
              "colorNeedle" : null,
              "colorNeedleEnd" : null,
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "highlightsWidth" : 15,
              "highlights" : [ {
                "from" : -60,
                "to" : -50,
                "color" : "#42a5f5"
              }, {
                "from" : -50,
                "to" : -40,
                "color" : "rgba(66, 165, 245, 0.83)"
              }, {
                "from" : -40,
                "to" : -30,
                "color" : "rgba(66, 165, 245, 0.66)"
              }, {
                "from" : -30,
                "to" : -20,
                "color" : "rgba(66, 165, 245, 0.5)"
              }, {
                "from" : -20,
                "to" : -10,
                "color" : "rgba(66, 165, 245, 0.33)"
              }, {
                "from" : -10,
                "to" : 0,
                "color" : "rgba(66, 165, 245, 0.16)"
              }, {
                "from" : 0,
                "to" : 10,
                "color" : "rgba(229, 115, 115, 0.16)"
              }, {
                "from" : 10,
                "to" : 20,
                "color" : "rgba(229, 115, 115, 0.33)"
              }, {
                "from" : 20,
                "to" : 30,
                "color" : "rgba(229, 115, 115, 0.5)"
              }, {
                "from" : 30,
                "to" : 40,
                "color" : "rgba(229, 115, 115, 0.66)"
              }, {
                "from" : 40,
                "to" : 50,
                "color" : "rgba(229, 115, 115, 0.83)"
              }, {
                "from" : 50,
                "to" : 60,
                "color" : "#e57373"
              } ],
              "animation" : true,
              "animationDuration" : 1000,
              "animationRule" : "bounce"
            },
            "title" : "Temperature radial gauge",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "decimals" : 0,
            "noDataDisplayMessage" : "",
            "configMode" : "basic",
            "units" : "Â°C",
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "actions" : { },
            "borderRadius" : null
          },
          "row" : 0,
          "col" : 0,
          "id" : "68f04119-04ef-ca04-5cc8-83c8d616393c"
        },
        "92f23f74-71a6-2e80-8a8a-e71e93a0b569" : {
          "typeFullFqn" : "system.entity_admin_widgets.device_admin_table",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1726068425944,
                  "endTimeMs" : 1726154825944
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "entitiesTitle" : "Device admin table",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "showCellActionsMenu" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "entityName",
              "useRowStyleFunction" : false
            },
            "title" : "Device admin table",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "device",
              "name" : "",
              "deviceId" : "ea58da90-6fff-11ef-bed4-9fee1d204d5c",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.22614699504660218
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : {
              "headerButton" : [ {
                "name" : "Add device",
                "icon" : "add",
                "type" : "customPretty",
                "customHtml" : "<form #addDeviceForm=\"ngForm\" [formGroup]=\"addDeviceFormGroup\"\n      (ngSubmit)=\"save()\" style=\"width: 480px;\">\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Add device</h2>\n    <span fxFlex></span>\n    <button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content>\n      <div class=\"mat-padding\" fxLayout=\"column\">\n            <mat-form-field class=\"mat-block\">\n                <mat-label>Device name</mat-label>\n                <input matInput formControlName=\"deviceName\" required>\n                <mat-error *ngIf=\"addDeviceFormGroup.get('deviceName').hasError('required')\">\n                    Device name is required.\n                </mat-error>\n            </mat-form-field>\n            <div fxLayout=\"row\" fxLayoutGap=\"8px\">\n                <tb-entity-subtype-autocomplete\n                    fxFlex=\"50\"\n                    formControlName=\"deviceType\"\n                    [required]=\"true\"\n                    [entityType]=\"'DEVICE'\"\n                ></tb-entity-subtype-autocomplete>\n                <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                    <mat-label>Label</mat-label>\n                    <input matInput formControlName=\"deviceLabel\">\n                </mat-form-field>\n            </div>\n            <div formGroupName=\"attributes\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                    <mat-label>Latitude</mat-label>\n                    <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">\n                </mat-form-field>\n                <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                    <mat-label>Longitude</mat-label>\n                    <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">\n                </mat-form-field>\n            </div>\n      </div>  \n  </div>\n  <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || addDeviceForm.invalid || !addDeviceForm.dirty\">\n      Create\n    </button>\n  </div>\n</form>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenAddDeviceDialog();\n\nfunction openAddDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, AddDeviceDialogController).subscribe();\n}\n\nfunction AddDeviceDialogController(instance) {\n    let vm = instance;\n    \n    vm.addDeviceFormGroup = vm.fb.group({\n      deviceName: ['', [vm.validators.required]],\n      deviceType: ['', [vm.validators.required]],\n      deviceLabel: [''],\n      attributes: vm.fb.group({\n          latitude: [null],\n          longitude: [null]\n      })      \n    });\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    \n    vm.save = function() {\n        vm.addDeviceFormGroup.markAsPristine();\n        let device = {\n            name: vm.addDeviceFormGroup.get('deviceName').value,\n            type: vm.addDeviceFormGroup.get('deviceType').value,\n            label: vm.addDeviceFormGroup.get('deviceLabel').value\n        };\n        deviceService.saveDevice(device).subscribe(\n            function (device) {\n                saveAttributes(device.id).subscribe(\n                    function () {\n                        widgetContext.updateAliases();\n                        vm.dialogRef.close(null);\n                    }\n                );\n            }\n        );\n    };\n    \n    function saveAttributes(entityId) {\n        let attributes = vm.addDeviceFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            attributesArray.push({key: key, value: attributes[key]});\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n        } else {\n            return widgetContext.rxjs.of([]);\n        }\n    }\n}",
                "customResources" : [ ],
                "id" : "70837a9d-c3de-a9a7-03c5-dccd14998758"
              } ],
              "actionCellButton" : [ {
                "name" : "Edit device",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup]=\"editDeviceFormGroup\"\n      (ngSubmit)=\"save()\" style=\"width: 480px;\">\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Edit device</h2>\n    <span fxFlex></span>\n    <button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content>\n      <div class=\"mat-padding\" fxLayout=\"column\">\n            <mat-form-field class=\"mat-block\">\n                <mat-label>Device name</mat-label>\n                <input matInput formControlName=\"deviceName\" required>\n                <mat-error *ngIf=\"editDeviceFormGroup.get('deviceName').hasError('required')\">\n                    Device name is required.\n                </mat-error>\n            </mat-form-field>\n            <div fxLayout=\"row\" fxLayoutGap=\"8px\">\n                <tb-entity-subtype-autocomplete\n                    fxFlex=\"50\"\n                    formControlName=\"deviceType\"\n                    [required]=\"true\"\n                    [entityType]=\"'DEVICE'\"\n                ></tb-entity-subtype-autocomplete>\n                <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                    <mat-label>Label</mat-label>\n                    <input matInput formControlName=\"deviceLabel\">\n                </mat-form-field>\n            </div>\n            <div formGroupName=\"attributes\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                    <mat-label>Latitude</mat-label>\n                    <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">\n                </mat-form-field>\n                <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                    <mat-label>Longitude</mat-label>\n                    <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">\n                </mat-form-field>\n            </div>\n      </div>  \n  </div>\n  <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || editDeviceForm.invalid || !editDeviceForm.dirty\">\n      Update\n    </button>\n  </div>\n</form>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    \n    vm.device = null;\n    vm.attributes = {};\n    \n    vm.editDeviceFormGroup = vm.fb.group({\n      deviceName: ['', [vm.validators.required]],\n      deviceType: ['', [vm.validators.required]],\n      deviceLabel: [''],\n      attributes: vm.fb.group({\n          latitude: [null],\n          longitude: [null]\n      })      \n    });\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    \n    vm.save = function() {\n        vm.editDeviceFormGroup.markAsPristine();\n        if (vm.editDeviceFormGroup.get('deviceType').value !== vm.device.type) {\n            delete vm.device.deviceProfileId;\n        }\n        vm.device.name = vm.editDeviceFormGroup.get('deviceName').value,\n        vm.device.type = vm.editDeviceFormGroup.get('deviceType').value,\n        vm.device.label = vm.editDeviceFormGroup.get('deviceLabel').value\n        deviceService.saveDevice(vm.device).subscribe(\n            function () {\n                saveAttributes().subscribe(\n                    function () {\n                        widgetContext.updateAliases();\n                        vm.dialogRef.close(null);\n                    }\n                );\n            }\n        );\n    };\n    \n    getEntityInfo();\n    \n    function getEntityInfo() {\n        deviceService.getDevice(entityId.id).subscribe(\n            function (device) {\n                attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE',\n                                                    ['latitude', 'longitude']).subscribe(\n                   function (attributes) {\n                        for (let i = 0; i < attributes.length; i++) {\n                            vm.attributes[attributes[i].key] = attributes[i].value; \n                        }\n                        vm.device = device;\n                        vm.editDeviceFormGroup.patchValue(\n                            {\n                                deviceName: vm.device.name,\n                                deviceType: vm.device.type,\n                                deviceLabel: vm.device.label,\n                                attributes: {\n                                    latitude: vm.attributes.latitude,\n                                    longitude: vm.attributes.longitude\n                                }\n                            }, {emitEvent: false}\n                        );\n                   } \n                );\n            }\n        );    \n    }\n    \n    function saveAttributes() {\n        let attributes = vm.editDeviceFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            attributesArray.push({key: key, value: attributes[key]});\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributesArray);\n        } else {\n            return widgetContext.rxjs.of([]);\n        }\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "93931e52-5d7c-903e-67aa-b9435df44ff4"
              }, {
                "name" : "Delete device",
                "icon" : "delete",
                "type" : "custom",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nopenDeleteDeviceDialog();\n\nfunction openDeleteDeviceDialog() {\n    let title = \"Are you sure you want to delete the device \" + entityName +  \"?\";\n    let content = \"Be careful, after the confirmation, the device and all related data will become unrecoverable!\";\n    dialogs.confirm(title, content, 'Cancel', 'Delete').subscribe(\n        function (result) {\n            if (result) {\n                deleteDevice();\n            }\n        }\n    );\n}\n\nfunction deleteDevice() {\n    deviceService.deleteDevice(entityId.id).subscribe(\n        function () {\n            widgetContext.updateAliases();\n        }\n    );\n}\n",
                "id" : "ec2708f6-9ff0-186b-e4fc-7635ebfa3074"
              } ]
            },
            "configMode" : "basic",
            "titleFont" : null,
            "titleColor" : null,
            "enableDataExport" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "92f23f74-71a6-2e80-8a8a-e71e93a0b569"
        }
      },
      "states" : {
        "default" : {
          "name" : "Dashboard 1",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "b34ca958-fe04-d689-9195-b9ba6799e502" : {
                  "sizeX" : 25,
                  "sizeY" : 10,
                  "row" : 0,
                  "col" : 0
                },
                "68f04119-04ef-ca04-5cc8-83c8d616393c" : {
                  "sizeX" : 6,
                  "sizeY" : 5,
                  "row" : 10,
                  "col" : 0
                },
                "92f23f74-71a6-2e80-8a8a-e71e93a0b569" : {
                  "sizeX" : 7,
                  "sizeY" : 6,
                  "row" : 15,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%"
              }
            }
          }
        }
      },
      "entityAliases" : { },
      "filters" : { },
      "timewindow" : {
        "displayValue" : "",
        "hideInterval" : false,
        "hideLastInterval" : false,
        "hideQuickInterval" : false,
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "quickInterval" : "CURRENT_DAY"
        },
        "history" : {
          "historyType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "fixedTimewindow" : {
            "startTimeMs" : 1725952433386,
            "endTimeMs" : 1726038833386
          },
          "quickInterval" : "CURRENT_DAY"
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true
      }
    },
    "customerId" : null,
    "externalId" : {
      "entityType" : "DASHBOARD",
      "id" : "66d75ad0-700d-11ef-b982-9fbe01b62b8d"
    },
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "66d75ad0-700d-11ef-b982-9fbe01b62b8d"
    },
    "image" : null,
    "mobileHide" : false,
    "mobileOrder" : null,
    "name" : "Dashboard 1",
    "ownerId" : null,
    "title" : "Dashboard 1"
  },
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}